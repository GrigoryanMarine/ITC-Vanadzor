---- NOTE:---- File paths need to be edited. Search for $$PATH$$ and-- replace it with the path to the directory containing-- the extracted data files.------ PostgreSQL database dump--SET statement_timeout = 0;SET lock_timeout = 0;SET client_encoding = 'UTF8';SET standard_conforming_strings = on;SET check_function_bodies = false;SET client_min_messages = warning;SET search_path = public, pg_catalog;ALTER TABLE ONLY public.passwords DROP CONSTRAINT passwords_id_fkey;ALTER TABLE ONLY public.not_required DROP CONSTRAINT not_required_id_fkey;ALTER TABLE ONLY public.users DROP CONSTRAINT users_pkey;ALTER TABLE ONLY public.passwords DROP CONSTRAINT passwords_pkey;ALTER TABLE ONLY public.not_required DROP CONSTRAINT not_required_pkey;DROP TABLE public.users;DROP TABLE public.passwords;DROP TABLE public.not_required;DROP SEQUENCE public.user_ids;DROP EXTENSION plpgsql;DROP SCHEMA public;---- Name: public; Type: SCHEMA; Schema: -; Owner: postgres--CREATE SCHEMA public;ALTER SCHEMA public OWNER TO postgres;---- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres--COMMENT ON SCHEMA public IS 'standard public schema';---- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: --CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;---- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: --COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';SET search_path = public, pg_catalog;---- Name: user_ids; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE user_ids    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.user_ids OWNER TO postgres;SET default_tablespace = '';SET default_with_oids = false;---- Name: not_required; Type: TABLE; Schema: public; Owner: postgres; Tablespace: --CREATE TABLE not_required (    n_r_id integer DEFAULT nextval('user_ids'::regclass) NOT NULL,    id integer,    day character(64),    month character(64),    year character(64),    age character(64),    gender character(64));ALTER TABLE public.not_required OWNER TO postgres;---- Name: passwords; Type: TABLE; Schema: public; Owner: postgres; Tablespace: --CREATE TABLE passwords (    pass_id integer DEFAULT nextval('user_ids'::regclass) NOT NULL,    id integer,    password character(64));ALTER TABLE public.passwords OWNER TO postgres;---- Name: users; Type: TABLE; Schema: public; Owner: postgres; Tablespace: --CREATE TABLE users (    id integer DEFAULT nextval('user_ids'::regclass) NOT NULL,    name character(64),    last_name character(64),    email character(64));ALTER TABLE public.users OWNER TO postgres;---- Data for Name: not_required; Type: TABLE DATA; Schema: public; Owner: postgres--COPY not_required (n_r_id, id, day, month, year, age, gender) FROM stdin;\.COPY not_required (n_r_id, id, day, month, year, age, gender) FROM '$$PATH$$/1990.dat';---- Data for Name: passwords; Type: TABLE DATA; Schema: public; Owner: postgres--COPY passwords (pass_id, id, password) FROM stdin;\.COPY passwords (pass_id, id, password) FROM '$$PATH$$/1989.dat';---- Name: user_ids; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('user_ids', 1, false);---- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres--COPY users (id, name, last_name, email) FROM stdin;\.COPY users (id, name, last_name, email) FROM '$$PATH$$/1988.dat';---- Name: not_required_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: --ALTER TABLE ONLY not_required    ADD CONSTRAINT not_required_pkey PRIMARY KEY (n_r_id);---- Name: passwords_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: --ALTER TABLE ONLY passwords    ADD CONSTRAINT passwords_pkey PRIMARY KEY (pass_id);---- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: --ALTER TABLE ONLY users    ADD CONSTRAINT users_pkey PRIMARY KEY (id);---- Name: not_required_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY not_required    ADD CONSTRAINT not_required_id_fkey FOREIGN KEY (id) REFERENCES users(id);---- Name: passwords_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY passwords    ADD CONSTRAINT passwords_id_fkey FOREIGN KEY (id) REFERENCES users(id);---- Name: public; Type: ACL; Schema: -; Owner: postgres--REVOKE ALL ON SCHEMA public FROM PUBLIC;REVOKE ALL ON SCHEMA public FROM postgres;GRANT ALL ON SCHEMA public TO postgres;GRANT ALL ON SCHEMA public TO PUBLIC;---- PostgreSQL database dump complete--