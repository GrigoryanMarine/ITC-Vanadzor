kturtle-script-v1.0
###!
# All functions should be commented
###!

###!
# what will happen if n=121 and k=30 (and other cases like this) ??? :)
# I would prefer having dynamic size of balls anyway :)
###!

###!
# Please add the explanation of the game in the beginning.
###!

###!
# Do not use fixed values assign them to some meaningful varaibles in order to make the source more readable.
###!

###!
# Please fix the notes above and I will review the sources deeper ;)
# Thanks for the job :)
###!
@(reset)
@(sh)
@(canvassize) 600@(,)600
@(go) 100@(,)550
@(canvascolor) 0@(,)255@(,)255
$squire_size=400
@(learn) PrintSquire $size{
  @(pc) 0@(,)0@(,)255 
  @(repeat) 4{
    @(fw) $size
    @(tr) 90
  }
}
@(learn) Circle $l{
    @(repeat) 36{
        @(fw) $l
        @(tr) 10
    }
}
@(learn) PrintBalls $n@(,)$k{
  $i=1
  $j=1
  @(go) $x@(,)$y
  @(while) $i<=$n{
    @(if) $j>11{
      $x=100
      $y=$y-35
      @(go) $x@(,)$y
      $j=1
    }
    Circle $circle_size
    $x=$x+35
    @(go) $x@(,)$y
    $j=$j+1
    $i=$i+1
  }
}
@(learn) FirstStep $n@(,)$k{
  $m=1
  @(while) $m<$n{
    $m=$m+$k+1
  }
  $a=$n-$m
  @(if) $a<0{
    $a=$k+1+$a
  }
  @(return) $a
}

@(learn) Count $n@(,)$k@(,)$a{
    $g=($n-1-$a)/($k+1)
    @(return) $g
}

@(learn) Remove_balls $a{
    @(repeat) $a{
        @(if) $x==100{
             $x=485
             $y=$y+35
        }  
        $x=$x-35
        @(go) $x@(,)$y
        @(pc) 0@(,)255@(,)255
        Circle 3
    }
}
@(learn) SmallBallC $a{
    @(repeat) $a{
        @(pc) 255@(,)0@(,)0
        @(go) $x1@(,)$y1
        Circle 2
        $y1=$y1-20
        @(if) $y1<=40{
            $y1=580
            $x1=$x1+30
        }
    }
}
@(learn) SmallBallB $a{
    @(repeat) $a{
        @(pc) 255@(,)0@(,)255
        @(go) $x2@(,)$y2
        Circle 2
        $y2=$y2-20
        @(if) $y2<=40{
            $y2=580
            $x2=$x2-30
        }
    }
}
@(learn) CurrentPlayer{
    @(if) $player=="B"{
        $player="A"
    }
    @(else){
        $player="B"
}
}
@(learn) Win $a{
    @(if) $a==1{
       @(message) "Win Computer"
    }
} 

###Parameters
#set game args
$ball_count=@(ask) "Please set ball count."
@(while) ($ball_count<2) @(or) ($ball_count>121){
    $ball_count=@(ask) "Please set ball count 2<=ball_count<=121"
}
$step=@(ask) "Please set game step."
@(while) ($step>=$ball_count) @(or) ($step<1){
    $step=@(ask) "Please set game step 0<step<"+$ball_count
}
$name=@(ask) "Input your name"
$circle_size=3
$x=100
$y=535
$x1=5
$y1=580
$x2=575
$y2=580
$player="B"

#main code
PrintSquire $squire_size
@(go) 20@(,)10
@(print) "Computer"
@(go) 520@(,)10
@(print) $name
PrintBalls $ball_count@(,)$step
$extra=FirstStep $ball_count@(,)$step
$step_count=Count $ball_count@(,)$step@(,)$extra
$ball=$ball_count
@(if) $extra!=0{
    @(message) "Game start computer"
    Remove_balls $extra
    SmallBallC $extra
    $ball=$ball_count-$extra
    Win $ball 
}
@(else){
    @(message) "Game start  "+$name
}
@(repeat) $step_count*2{
    @(if) $player=="B"{
       # message "Play   "+$name
        $p_step=@(ask) "Set your number  "+$name
        @(while) ($p_step>$step) @(or) ($p_step<1){
            $p_step=@(ask) "Set new number  0<k<"+$step
        }
        Remove_balls $p_step
        SmallBallB $p_step
        CurrentPlayer
        $ball=$ball-$p_step
        }@(else){
        @(message) "Play computer"
       $c_step=$step+1-$p_step
        Remove_balls $c_step
        SmallBallC $c_step
        CurrentPlayer
        $ball=$ball-$c_step
       
    }
 Win $ball 
}