kturtle-script-v1.0
@(reset)
@(sh)
@(learn) modul_divide $a@(,) $b {
$u=$a/$b
@(if) $u<@(round)($u) {
$u=$u-1
}
$m=@(round)($u)
$p=$a-($m*$b)
@(return) $p
}

@(learn) circle $size {
@(repeat) 36 {
@(forward) $size
@(turnleft) 10
}
}

$count=@(ask) "Insert the number of balls"
$Pick=@(ask) "Maximum number of balls you can pick"

@(learn) print_circles $count {
$x=25
$y=387
@(for) $i=1 @(to) $count {
@(if) $x>399 {
$x=25
$y=$y-25.5
}
@(go) $x@(,)$y
circle 2
$x=$x+25.5
}
}

$l=0
@(learn) delete_balls $k {
@(if) $l-$k <= $Pick {
@(pc) 255@(,)255@(,)255
@(pw) 1.8
@(getx)
$x=25
$y=387
@(repeat) $k {
@(if) $x>399 {
$x=25
$y=$y-25.5
}
@(go) $x@(,)$y
circle 2
$x=$x+25.5
}
} @(else) {
@(message) "Invalid value1"
@(break)
}
}

@(learn) play_game1 {
@(if) $count==1 {
@(message) "Game over, you lost!!!"
@(break)
}
@(if) $count<0 {
@(message) "Invalid value"
@(break)
}
@(while) $count > 1  {
$k=@(ask) "Player: Insert the number of balls you can pick"
$l=$l+$k
delete_balls $l
print_player_balls $l
@(message) "Comp: Computer out of the ball"
#delete_balls $l
}
}

@(learn) play_game1 {
@(if) $count==1 {
@(message) "Game over, you lost!!!"
@(break)
}
@(if) $count<0 {
@(message) "Invalid value"
@(break)
}
@(while) $count > 1  {
@(message) "Comp: Computer out of the ball"
#delete_balls $l
$k=@(ask) "Player: Insert the number of balls you can pick"
$l=$l+$k
delete_balls $l
print_player_balls $l
}
}


@(learn) print_player_balls $k {
$t=387
@(pc) 0@(,)0@(,)0
@(for) $i=1 @(to) $k {
$t=$t-10
@(go) -10@(,)$t
circle 1
}
@(print) $l
}

@(learn) print_computer_balls $k {

}



@(learn) main{
#we can use mod function, but we knew it later ))) 
@(if) modul_divide $count@(,) $Pick == 1 {
play_game1
} @(else) {
play_game2
}
print_circles $count
main